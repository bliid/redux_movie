{"version":3,"sources":["MovieCard.js","MovieList.js","Searchform.js","addForm.js","MovieContainer.js","App.js","serviceWorker.js","redux/reducers/movieReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["MovieCard","props","state","className","src","this","img","name","repeat","val","Component","MovieList","filteredmoviesval","items","filter","movies","searchval","filteredmoviesname","includes","searchName","console","log","search","map","l","Searchform","handleSubmit","bind","handleChange","handleReset","e","setState","target","value","reset","preventDefault","Searchrender","onSubmit","type","onChange","placeholder","min","max","onClick","AddForm","addItem","MovieContainer","data","SearchItem","RESTItem","item","CreateItem","connect","movie","dispatch","App","Boolean","window","location","hostname","match","INITIAL_STATE","movieReducer","action","newlist","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sYA0BeA,G,kBAtBX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OAEI,yBAAKC,UAAU,aAEX,yBAAKC,IAAKC,KAAKJ,MAAMK,MAExB,uBAAGH,UAAU,SAAb,IAAuBE,KAAKJ,MAAMM,KAAlC,IAAwC,0BAAMJ,UAAU,UAAhB,IAA2B,IAAIK,OAAOH,KAAKJ,MAAMQ,MAAzF,U,GAZWC,cCqDTC,G,kBAnDb,WAAYV,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAKT,IAAD,OACDU,EAAoBP,KAAKJ,MAAMY,MAAMC,QACzC,SAACC,GAAD,OAAYA,EAAON,KAAO,EAAKR,MAAMe,aAEjCC,EAAqBZ,KAAKJ,MAAMY,MAAMC,QAAO,SAACC,GAAD,OACjDA,EAAOR,KAAKW,SAAS,EAAKjB,MAAMkB,eAElC,OACE,yBAAKhB,UAAU,aACZiB,QAAQC,IAAIJ,GACZZ,KAAKJ,MAAMqB,OACV,6BACGjB,KAAKJ,MAAMe,UACV,wBAAIb,UAAU,eACXS,EAAkBW,KAAI,SAACC,GAAD,OACrB,4BACE,kBAAC,EAAD,CAAWjB,KAAMiB,EAAEjB,KAAMD,IAAKkB,EAAElB,IAAKG,IAAKe,EAAEf,WAKlD,wBAAIN,UAAU,eACXc,EAAmBM,KAAI,SAACC,GAAD,OACtB,4BACE,kBAAC,EAAD,CAAWjB,KAAMiB,EAAEjB,KAAMD,IAAKkB,EAAElB,IAAKG,IAAKe,EAAEf,YAOtD,6BACE,wBAAIN,UAAU,eACXE,KAAKJ,MAAMY,MAAMU,KAAI,SAACC,GAAD,OACpB,4BACE,kBAAC,EAAD,CAAWjB,KAAMiB,EAAEjB,KAAMD,IAAKkB,EAAElB,IAAKG,IAAKe,EAAEf,iB,GAzCtCC,c,cCyDTe,G,kBAxDX,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAS,CACViB,WAAW,GACXH,UAAU,GACVM,QAAQ,GAEX,EAAKI,aAAc,EAAKA,aAAaC,KAAlB,gBACnB,EAAKC,aAAc,EAAKA,aAAaD,KAAlB,gBACnB,EAAKE,YAAa,EAAKA,YAAYF,KAAjB,gBATJ,E,0EAeNG,GAAG,IAAD,EACXzB,KAAK0B,UAAL,mBACKD,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOC,OAD9B,wBAEY,GAFZ,M,kCAMQH,GAERzB,KAAK0B,SAAS,CACVZ,WAAW,GACXH,UAAU,GACVM,QAAQ,IAEXjB,KAAKJ,MAAMiC,MAAM7B,KAAKH,S,mCAEd4B,GACTA,EAAEK,iBACF9B,KAAKJ,MAAMmC,aAAa/B,KAAKH,OAC7BG,KAAK0B,SAAS,CACVZ,WAAW,GACXH,UAAU,GACVM,QAAQ,M,+BAIZ,OACI,yBAAKnB,UAAU,cACX,0BAAMkC,SAAUhC,KAAKqB,cACrB,2BAAOY,KAAK,OAAO/B,KAAK,aAAa0B,MAAO5B,KAAKH,MAAMiB,WAAYoB,SAAUlC,KAAKuB,aAAcY,YAAY,eAC5G,2BAAOF,KAAK,SAAS/B,KAAK,YAAYkC,IAAI,IAAIC,IAAI,IAAIT,MAAO5B,KAAKH,MAAMc,UAAWuB,SAAUlC,KAAKuB,aAAcY,YAAY,UAC5H,0CACA,4BAAQG,QAAStC,KAAKwB,aAAtB,e,GAhDSnB,cCyCVkC,G,kBAzCX,WAAY3C,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAS,CACVK,KAAK,GACLD,IAAI,GACJG,IAAI,IAGP,EAAKiB,aAAc,EAAKA,aAAaC,KAAlB,gBACnB,EAAKC,aAAc,EAAKA,aAAaD,KAAlB,gBATL,E,0EAWNG,GACTzB,KAAK0B,SAAL,eACKD,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOC,U,mCAGrBH,GACTA,EAAEK,iBACF9B,KAAKJ,MAAM4C,QAAQxC,KAAKH,OACxBG,KAAK0B,SAAS,CACVxB,KAAK,GACLD,IAAI,GACJG,IAAI,O,+BAIR,OACI,yBAAKN,UAAU,WACX,0BAAMkC,SAAUhC,KAAKqB,cACrB,2BAAOY,KAAK,OAAO/B,KAAK,OAAO0B,MAAO5B,KAAKH,MAAMK,KAAMgC,SAAUlC,KAAKuB,aAAcY,YAAY,eAChG,2BAAOF,KAAK,OAAO/B,KAAK,MAAO0B,MAAO5B,KAAKH,MAAMI,IAAKiC,SAAUlC,KAAKuB,aAAcY,YAAY,YAC/F,2BAAOF,KAAK,SAAUG,IAAI,IAAIC,IAAI,IAAInC,KAAK,MAAO0B,MAAO5B,KAAKH,MAAMO,IAAK8B,SAAUlC,KAAKuB,aAAcY,YAAY,UAElH,6C,GAlCM9B,c,sBCMhBoC,E,2MACFV,aAAe,SAACW,GACZ,EAAK9C,MAAM+C,WAAWD,I,EAE1Bb,MAAQ,WACJ,EAAKjC,MAAMgD,Y,EAEfJ,QAAU,SAACK,GACP,EAAKjD,MAAMkD,WAAWD,I,wEAGtB,OACI,yBAAK/C,UAAU,kBACX,6BACA,kBAAC,EAAD,CAAYiC,aAAc/B,KAAK+B,aAAcF,MAAO7B,KAAK6B,QACzD,kBAAC,EAAD,CAAWrB,MAAOR,KAAKJ,MAAMY,MAAOS,OAAQjB,KAAKJ,MAAMqB,OAAQH,WAAYd,KAAKJ,MAAMkB,WAAYH,UAAWX,KAAKJ,MAAMe,YACxH,kBAAC,EAAD,CAAS6B,QAASxC,KAAKwC,gB,GAhBVnC,aAuCd0C,eAhBS,SAAClD,GACrB,MAAO,CACHW,MAAOX,EAAMmD,MAAMxC,MACnBS,OAAQpB,EAAMmD,MAAM/B,OACpBH,WAAYjB,EAAMmD,MAAMlC,WACxBH,UAAWd,EAAMmD,MAAMrC,cAGF,SAAAsC,GACzB,MAAO,CAEPH,WAAY,SAAAD,GAASI,EAAS,CAAChB,KAAK,eAAgBY,KAAMA,KAC1DF,WAAY,SAACD,GAAUO,EAAS,CAAChB,KAAK,eAAgBS,KAAMA,KAC5DE,SAAU,WAAOK,EAAS,CAAChB,KAAK,oBAGrBc,CAA6CN,G,MClC7CS,MARf,WACE,OACC,yBAAKpD,UAAU,OACb,kBAAC,EAAD,QCGeqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6kBClBN,IAAMC,EAAgB,CAClBhD,MAAO,CACC,CAACN,KAAM,SAAUD,IAAI,wEAAyEG,IAAI,KAClG,CAACF,KAAM,SAAUD,IAAI,wEAAyEG,IAAI,KAClG,CAACF,KAAM,SAAUD,IAAI,wEAAyEG,IAAI,KAClG,CAACF,KAAM,SAAUD,IAAI,wEAAyEG,IAAI,MAE1Ga,QAAQ,EACRH,WAAW,GACXH,UAAU,IAkCG8C,EA9BM,WAAoC,IAAnC5D,EAAkC,uDAA1B2D,EAAeE,EAAW,uCACtD,OAAQA,EAAOzB,MACZ,IAAK,eACA,IAAM0B,EAAO,sBAAO9D,EAAMW,OAAb,CAAoBkD,EAAOb,OACxC,OAAO,EAAP,GACGhD,EADH,CAEAW,MAAOmD,IAGX,IAAK,eACD,OAAO,EAAP,GACG9D,EADH,CAEAoB,OAAQyC,EAAOhB,KAAKzB,OACpBH,WAAY4C,EAAOhB,KAAK5B,WACxBH,UAAW+C,EAAOhB,KAAK/B,YAI3B,IAAK,qBACD,OAAO,EAAP,GACGd,EADH,CAEAoB,QAAQ,EACRH,WAAW,GACXH,UAAU,KAEhB,QACE,OAAOd,ICnCA+D,cAAgB,CAC7BZ,MAAOS,ICCMI,EAFDC,YAAYC,GCK1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACjB,kBAAC,EAAD,OAEFK,SAASC,eAAe,SJoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.04c5c680.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './MovieCard.css';\r\n\r\nclass MovieCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n \r\n            <div className=\"MovieCard\">\r\n           \r\n                <img src={this.props.img} />\r\n\r\n             <p className='cardP'> {this.props.name} <span className='rating'> {\"*\".repeat(this.props.val)}</span> </p>  \r\n\r\n       \r\n            </div>\r\n\r\n                \r\n     \r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieCard;","import React, { Component } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport \"./MovieList.css\";\r\n\r\nclass MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const filteredmoviesval = this.props.items.filter(\r\n      (movies) => movies.val >= this.props.searchval\r\n    );\r\n    const filteredmoviesname = this.props.items.filter((movies) =>\r\n      movies.name.includes(this.props.searchName)\r\n    );\r\n    return (\r\n      <div className=\"MovieList\">\r\n        {console.log(filteredmoviesname)}\r\n        {this.props.search ? (\r\n          <div>\r\n            {this.props.searchval ? (\r\n              <ul className=\"cardcontent\">\r\n                {filteredmoviesval.map((l) => (\r\n                  <li>\r\n                    <MovieCard name={l.name} img={l.img} val={l.val} />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <ul className=\"cardcontent\">\r\n                {filteredmoviesname.map((l) => (\r\n                  <li>\r\n                    <MovieCard name={l.name} img={l.img} val={l.val} />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <ul className=\"cardcontent\">\r\n              {this.props.items.map((l) => (\r\n                <li> \r\n                  <MovieCard name={l.name} img={l.img} val={l.val} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Searchform.css';\r\n\r\nclass Searchform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({ \r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n         })\r\n         this.handleSubmit= this.handleSubmit.bind(this)\r\n         this.handleChange= this.handleChange.bind(this)\r\n         this.handleReset= this.handleReset.bind(this)\r\n      \r\n    }\r\n   \r\n   \r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            search: true,\r\n        })  \r\n    }\r\n    \r\n    handleReset(e){\r\n    \r\n        this.setState({ \r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n         })\r\n         this.props.reset(this.state)\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.Searchrender(this.state)\r\n        this.setState({\r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='Searchform'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"searchName\" value={this.state.searchName} onChange={this.handleChange} placeholder=\"Movie name\"/>\r\n                <input type=\"number\" name=\"searchval\" min=\"1\" max=\"5\" value={this.state.searchval} onChange={this.handleChange} placeholder=\"Stars\"/> \r\n                <button>Search</button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n                \r\n                </form>\r\n               \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Searchform;\r\n\r\n","import React, { Component } from 'react';\r\nimport './addForm.css';\r\n\r\nclass AddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({ \r\n            name:\"\",\r\n            img:\"\",\r\n            val:\"\"\r\n\r\n         })\r\n         this.handleSubmit= this.handleSubmit.bind(this)\r\n         this.handleChange= this.handleChange.bind(this)\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })  \r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.addItem(this.state)\r\n        this.setState({\r\n            name:\"\",\r\n            img:\"\",\r\n            val:\"\"\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='addForm'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Movie name\"/>\r\n                <input type=\"text\" name=\"img\"  value={this.state.img} onChange={this.handleChange} placeholder=\"img Url\"/> \r\n                <input type=\"number\"  min=\"1\" max=\"5\" name=\"val\"  value={this.state.val} onChange={this.handleChange} placeholder=\"Stars\"/> \r\n\r\n                <button>Add</button>\r\n                </form>\r\n               \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddForm;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport MovieList from './MovieList';\r\nimport Searchform from './Searchform';\r\nimport AddForm from './addForm';\r\nimport './MovieContainer.css';\r\nimport './Loader.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MovieContainer extends Component {\r\n    Searchrender = (data) => {\r\n        this.props.SearchItem(data)\r\n    }\r\n    reset = () => {\r\n        this.props.RESTItem()\r\n    }\r\n    addItem = (item) =>{\r\n        this.props.CreateItem(item)\r\n    }\r\n    render() {  \r\n        return ( \r\n            <div className='MovieContainer'>\r\n                <div> \r\n                <Searchform Searchrender={this.Searchrender} reset={this.reset}/>\r\n                <MovieList items={this.props.items} search={this.props.search} searchName={this.props.searchName} searchval={this.props.searchval} />\r\n                <AddForm addItem={this.addItem}/>\r\n                </div> \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.movie.items,\r\n        search: state.movie.search,\r\n        searchName: state.movie.searchName,\r\n        searchval: state.movie.searchval\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n    //  remeveTodo: id => {dispatch({type:'DELETE_TODO', id: id})},\r\n    CreateItem: item => {dispatch({type:'CREATE_MOVIE', item: item})},\r\n    SearchItem: (data) => {dispatch({type:'SEARCH_MOVIE', data: data})},\r\n    RESTItem: () => {dispatch({type:'RESET_MOVIE'})},\r\n    }\r\n  };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer)","import React from 'react';\nimport MovieContainer from './MovieContainer';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n   <div className='App'>\n     <MovieContainer />\n   </div> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    items: [\r\n            {name: \"movie1\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\"},\r\n            {name: \"movie2\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\"},\r\n            {name: \"movie3\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\" },\r\n            {name: \"movie4\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"4\"},\r\n                    ],\r\n    search: false,\r\n    searchName:\"\",\r\n    searchval:\"\"\r\n    \r\n  };\r\n  \r\n  const movieReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n       case 'CREATE_MOVIE':\r\n            const newlist = [...state.items, action.item ]\r\n            return {\r\n            ...state,\r\n            items: newlist\r\n           \r\n        };\r\n        case 'SEARCH_MOVIE':\r\n            return {\r\n            ...state,\r\n            search: action.data.search,\r\n            searchName: action.data.searchName,\r\n            searchval: action.data.searchval\r\n            \r\n           \r\n        };\r\n        case 'TOGGLE_COMPLE_TODO':\r\n            return {\r\n            ...state,\r\n            search: false,\r\n            searchName:\"\",\r\n            searchval:\"\"\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default movieReducer;\r\n  ","import { combineReducers } from 'redux';\r\n\r\nimport movieReducer from './reducers/movieReducer';\r\n\r\nexport default combineReducers({\r\n  movie: movieReducer\r\n});","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}